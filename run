#!/bin/csh -f
# Η διαδικασία μεταγλωτίζει και τρέχει απλά προγράμματα c/c++/fortran/java.
# Το εκτελέσιμο έχει το ίδιο όνομα με το αρχείο κώδικα, χωρίς κατάληξη.
# Επίσης εκτελεί scripts γραμμένα σε python ή perl, κάνει επεξεργασία κειμένου
# tex/latex, και αποσυμπιέζει αρχεία zip, tar, gz. Για πιο πολύπλοκα προγράμματα
# τα οποία απαιτούν πολλά αρχεία, η διαδικασία μπορεί να τρέξει makefiles
# τα οποία θα παράξουν τα εκτελέσιμα. Το όνομα του makefile πρέπει να είναι
# ίδιο με το όνομα του αντίστοιχου εκτελέσιμου που θα παραχθεί, και να έχει
# κατάληξη .make. Αποδεκτές σημαίες είναι οι:

# -c		: Σηματοδοτεί ότι θα γίνει μόνο μεταγλώτιση των προγραμμάτων
# -k		: Σηματοδοτεί ότι θα διατηρηθούν τα εκτελέσιμα αρχεία
# -b		: Σηματοδοτεί ότι πρόκειται να χρησιμοποιηθούν βιβλιοθήκες Boost
# -q		: Σηματοδοτεί ότι πρόκειται για πρόγραμμα Qt
# -p		: Σε έργα Qt σηματοδοτεί ότι η διαδικασία θα σταματήσει στη δημιουργία του αρχείου .pro
# -t		: Σηματοδοτεί ότι πρόκειται για κείμενο TeX

# Η διαδικασία μπορεί να δεχτεί περισσότερες από μία σημαίες, τις οποίες και
# διαχωρίζει από τα υπόλοιπα ορίσματα. Οι σημαίες αποθηκεύονται στην μεταβλητή
# περιβάλλοντος RUN_FLAGS ενώ τα υπόλοιπα ορίσματα στην μεταβλητή arxeia. Μετά
# την εκτέλεση τα εκτελέσιμα αρχεία διαγράφονται, μαζί με όσα ενδιάμεσα αρχεία
# έχουν δημιουργηθεί. Οι νέες σημαίες πρέπει να προστίθενται στη μεταβλητή
# allflags μέσω της οποίας αυτοματοποιείται η αναγνώριση εκφράσεων όπως η
# run -qk.

# Μεταβλητές προγράμματος 											- πχ run relativepath/myfile.xxx
# cfile		- το όρισμα όπως δόθηκε στη γραμμή εντολής				- πχ relativepath/myfile.xxx
# dirpath	- η διαδρομή											- πχ relativepath
# fileroot	- το όνομα του αρχείου χωρίς την κατάληξη				- πχ myfile
# fileext	- η κατάληξη του αρχείου								- πχ xxx
# filename 	- το όνομα του αρχείου									- πχ myfile.xxx

# Αν δεν υπάρχει διαδρομή, δηλαδή δοθεί μόνο το όνομα του αρχείου (στο
# παράδειγμα myfile.xxx), τα dirpath και cfile ταυτίζονται. Η διαδικασία
# ξεκινάει με σάρωση των ορισμάτων και αποθήκευση των σημαιών στην μεταβλητή
# flags. Ακόμα και αν κάποια σημαία δοθεί περισσότερες από μια φορές εκ
# παραδρομής, η διαδικασία ελέγχει την μεταβλητή flags και αν η σημαία
# έχει ήδη καταχωρηθεί εκεί δεν την προσθέτει ξανά. Αν η μεταβλητή arxeia
# δεν έχει μέλη, δεν δόθηκαν ονόματα αρχείων στην κλήση και αυτά πρέπει να
# ζητηθούν. Σε αντίθετη περίπτωση μπορεί να ξεκινήσει η εκτέλεση για τα αρχεία
# που δόθηκαν στην γραμμή εντολής.

set pushdsilent
set flags = ( )
set arxeia = ( )
set acceptedFlags = ( "c" "k" "q" "t" "p" "b" )				# ** TO BE UPDATED IF FLAGS CHANGE **
set anyflag = "[ckqtpb]"									# ** TO BE UPDATED IF FLAGS CHANGE **

foreach orisma ( $argv[*] )
	switch ( $orisma )
	case "-*h*":
		~/bin/runSubroutines/run_help
		exit (1)
		breaksw
	case "-$anyflag":				# Σημαίες
		if ( `echo $flags | grep -c -e $orisma` == 0 )	then
			set flags = ( $flags $orisma )
		endif
		breaksw
	case "-$anyflag$anyflag":				# Σημαίες
		foreach option ( $acceptedFlags[*] )
			if ( `echo $orisma | grep -c -e "$option"` == 1 \
			&& `echo $flags | grep -c -e "-$option"` == 0 ) then
				set flags = ( $flags "-$option" )
			endif
		end
		breaksw
	case "-*":
		echo $orisma": Μη αναγνωρίσιμη σημαία"
		exit (1)
	default:							# Αρχεία
		set arxeia = ( $arxeia $orisma )
	endsw
end

if ( $#arxeia != 0 ) goto mono_onomata_arxeion

echo -n "Δώσε πηγαία αρχεία για μεταγλώτιση: "
#  set files=(`gets`)     	      	  	        	# System V
set files=( $< )										# BSD

if ( $#files != 0 ) then

# Νέος έλεγχος για σημαίες και αρχεία...

	foreach orisma ( $argv[*] )
		switch ( $orisma )
		case "-*h*":
			~/bin/runSubroutines/run_help
			exit (1)
			breaksw
		case "-$anyflag":
			if ( `echo $flags | grep -c -e $orisma` == 0 )	then
				set flags = ( $flags $orisma )
			endif
			breaksw
		case "-$anyflag$anyflag":				# Σημαίες
			foreach option ( $acceptedFlags[*] )
				if ( `echo $orisma | grep -c -e "$option"` == 1 \
				&& `echo $flags | grep -c -e "-$option"` == 0 ) then
					set flags = ( $flags "-$option" )
				endif
			end
			breaksw
		case "-*":
			echo $orisma": Μη αναγνωρίσιμη σημαία"
			exit (1)
		default:
			set arxeia = ( $arxeia $orisma )
		endsw
	end

mono_onomata_arxeion:

	setenv RUN_FLAGS "$flags"					# Μεταβλητή περιβάλλοντος για να περάσουν οι σημαίες στα υποπρογράμματα

	foreach cfile ( $arxeia[*] )

		set dirpath=$cfile:h
		set fileroot=$cfile:r:t
		set fileext=$cfile:e:t
		set filename=$fileroot.$fileext

		if ( -f $cfile ) then						# Το αρχείο κώδικα υπάρχει
			if ( $dirpath != $cfile ) pushd $dirpath

			switch ( $fileext )

			case "c":
				~/bin/runSubroutines/run_c $filename
				breaksw

			case "cc":
			case "cp":
			case "cxx":
			case "cpp":
			case "CPP":
			case "c++":
			case "C":
				~/bin/runSubroutines/run_cpp $filename
				breaksw

			case "f":
			case "for":
			case "ftn":
			case "F":
			case "FOR":
			case "fpp":
			case "FPP":
			case "FTN":
			case "f90":
			case "f95":
			case "f03":
			case "f08":
			case "F90":
			case "F95":
			case "F03":
			case "F08":
				~/bin/runSubroutines/run_for $filename
				breaksw

			case "java":
				~/bin/runSubroutines/run_java $filename
				breaksw

			case "make":
				~/bin/runSubroutines/run_make $filename
				breaksw

			case "2e":
			case "tex":
				~/bin/runSubroutines/run_latex $filename
				breaksw

			case "tar":
			case "TAR":
			case "zip":
			case "ZIP":
			case "gz":
			case "GZ":
			case "tgz":
			case "TGZ":
				~/bin/runSubroutines/run_decompress $filename
				breaksw

			case "py":
			case "pl":
				~/bin/runSubroutines/run_script $filename
				breaksw

			default:
				echo "Το αρχείο $filename δεν είναι πηγαίο αρχείο"
				exit 1

			endsw
			if ( $dirpath != $cfile ) popd

		else
			echo "Το αρχείο $cfile δεν υπάρχει"
			exit 1
		endif
	end
endif

