#!/bin/csh -f
# Το υποπρόγραμμα δέχεται τις σημαίες και το αρχείο στο οποίο θα ενεργήσει από
# τη διαδικασία run. Οι σημαίες βρίσκονται αποθηκευμένες στην μεταβλητή
# RUN_FLAGS και το αρχείο δίνεται ως το (μοναδικό) όρισμα της διαδικασίας argv[1].

set sourcefile = $argv[1]
set executablefile = $sourcefile:r
set qtexecutablefile = "$PWD:t"
set objectfile = $executablefile.o
set projectfile = "$PWD:t.pro"
set boostdir = /usr/local/lib

# Compiler flags defined here
# -g in RUN_FLAGS adds -g compiler flag and enables _GLIBCXX_DEBUG
# Normal run enables NDEBUG
if ( `echo $RUN_FLAGS | grep -c -e "-g"` == 1 ) then
	set CXXFLAGS = "-Wshadow -Wformat=2 -Wfloat-equal -Wconversion -Wextra -Wall -O2 -pedantic -std=c++17 -pthread -D_GLIBCXX_DEBUG -g"
else
	set CXXFLAGS = "-Wshadow -Wformat=2 -Wfloat-equal -Wconversion -Wextra -Wall -O2 -pedantic -std=c++17 -pthread -DNDEBUG"
endif


if ( `echo $RUN_FLAGS | grep -c -e "-b"` == 1 ) then
	set boost
	set boostLink = ""
#	Pick-up contents of the boost linked libraries by using their static version
#	Strip path and extention at first, the "lib" prefix with regular expression substitution with sed, and finally add -l for the g++ link option
	foreach cfile ( $boostdir/libboost*.a )
		set filename = $cfile:t:r
		set filename = `echo $filename | sed 's/libboost/boost/'`
		set boostLink = "$boostLink -l$filename"
	end
endif

if ( `echo $RUN_FLAGS | grep -c -e "-q"` == 1 ) set qt

# Έλεγχος αν δόθηκαν σημαίες.
if ( `echo $RUN_FLAGS | grep -c -e "-q"` == 1 ) then				# Πρόγραμμα Qt

		qmake -project -norecursive -o $projectfile
		mv $projectfile $executablefile.pro_old
		sed -f ~/sed_scripts/qt $executablefile.pro_old > $projectfile
		rm *.pro_old
		if ( `echo $RUN_FLAGS | grep -c -e "-p"` != 1 ) then
			qmake $projectfile
			make
			./$qtexecutablefile
			if ( `echo $RUN_FLAGS | grep -c -e "-k"` != 1 )	then
				rm Makefile $qtexecutablefile *.pro *.o ???_*.cpp
			endif
		endif

else

    if ( $?boost ) then

    	if ( `echo $RUN_FLAGS | grep -c -e "-c"` == 1 ) then

	    	g++ -c $CXXFLAGS -o $objectfile $sourcefile $boostLink
			set STATUS = $status

	    else

		    g++ $CXXFLAGS -o $executablefile $sourcefile $boostLink
			set STATUS = $status

	    	if ( $STATUS == 0 ) clear
		    ./$executablefile
		    if ( `echo $RUN_FLAGS | grep -c -e "-k"` != 1 ) rm $executablefile
    	endif

    else

        if ( `echo $RUN_FLAGS | grep -c -e "-c"` == 1 ) then

	    	g++ -c $CXXFLAGS -o $objectfile $sourcefile
			set STATUS = $status

	    else

		    g++ $CXXFLAGS -o $executablefile $sourcefile
			set STATUS = $status

	    	if ( $STATUS == 0 ) clear
		    ./$executablefile
		    if ( `echo $RUN_FLAGS | grep -c -e "-k"` != 1 ) rm $executablefile
    	endif

    endif

endif
